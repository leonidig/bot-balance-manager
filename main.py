from telethon import TelegramClient, events, Button as button
from os import getenv


api_id = getenv("api_id")
api_hash = getenv("api_hash")
bot_token = getenv("bot_token")


client = TelegramClient('bot_session', api_id, api_hash).start(bot_token=bot_token)


@client.on(events.NewMessage(pattern='/start'))
async def start_handler(event):
    sender = await event.get_sender()
    first_name = sender.first_name
    reply_btns = [
                    button.url("–°–∏–ª–∫–∞ –ù–∞ –ü—Ä–æ—î–∫—Ç", "https://github.com/leonidig/X-PYTHON-MANAGER")
    ]
    await event.reply(f"–ü—Ä–∏–≤—ñ—Ç, {first_name}!\n–Ø –±–æ—Ç —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –∑ –∑–∞–ø—É—Å–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞!", buttons=reply_btns)
    next1_ = [
        button.inline("–°–∫–æ–ø—ñ—é–≤–∞–≤!", b'next1_')
    ]
    await event.respond("–¢–µ–ø–µ—Ä –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É —ñ –∫–æ–ø—ñ—é–π —à–ª—è—Ö –¥–æ –º–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—è", buttons = next1_)


@client.on(events.CallbackQuery(pattern=b"next1_"))
async def create_file(event):
    next2 = [
        button.inline("–°—Ç–≤–æ—Ä–∏–≤!", b'next2')
    ]
    await event.respond("–¢–∞–∫, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –Ω–∞—Å —î.\n–î–∞–≤–∞–π —Ç–µ–ø–µ—Ä —Å—Ç–≤–æ—Ä–µ–º–æ –ø–∞–ø–∫—É –¥–ª—è —Ü—å–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É", buttons = next2)


@client.on(events.CallbackQuery(pattern=b'next2'))
async def start_open_project(event):
    await event.respond("–ö—Ä—É—Ç–æ –≤–∏—Ö–æ–¥–∏—Ç—å!\n–¢–µ–ø–µ—Ä —Ç—Ä–µ–±–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ü–µ–π –ø—Ä–æ—î–∫—Ç, –ø–æ–≤—Ç–æ—Ä—é–π –∑–∞ –º–Ω–æ—é\n–¢–µ–ø–µ—Ä —Ç—Ä–µ–±–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥—É")
    vs_code_path = '/Users/leonidlisovskiy/Desktop/bot-balance-manager/open_vs_code.png'
    next3 = [
        button.inline("–î–∞–ª—ñ", b'next3')
    ]
    await client.send_file(event.chat_id, vs_code_path, caption="–í —Ç–µ–±–µ –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —â–æ—Å—å —Å—Ö–æ–∂–µ - —Ü–µ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è",buttons=next3)
    


@client.on(events.CallbackQuery(pattern=b'next3'))
async def open_project(event):
    await event.respond("–¢–µ–ø–µ—Ä –Ω–∞–∂–º–∏ f1, —Ç–∞ –Ω–∞–ø–∏—à–∏ ->\n' >clone '")
    git_clone_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/git_clone.png"
    next4 = [
        button.inline("–î–∞–ª—ñ", b'next4')
    ]
    await client.send_file(event.chat_id, git_clone_path, caption="–í —Ç–µ–±–µ –ø–æ–≤–∏–Ω–Ω–æ –≤–∏–π—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–º —á–∏–Ω–æ–º\n–¢–µ–ø–µ—Ä –∂–º–∏ Enter\n–ü—Ä–∏–º—ñ—Ç–∫–∞!–Ø–∫—â–æ –≤ —Ç–µ–±–µ —è–∫ –≤ –º–µ–Ω–µ –Ω–µ–º–∞—î –∫–ª–∞–≤—ñ—à–∏ f1 - —Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ —Ü–µ –ø–æ–ª–µ –≤–∏—â–µ —ñ —Ç–∞–∫ —Å–∞–º–æ –≤–≤–µ–¥–∏ >clone", buttons=next4)
    

@client.on(events.CallbackQuery(pattern=b"next4"))
async def enter_url(event):
    entered_url_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/enter_path.png"
    await event.respond("–¢–µ–ø–µ—Ä —Ç–∏ –º–æ–∂–µ—à –≤—Å—Ç–∞–≤–ª—è—Ç–∏ —Ç—É–¥–∏ —à–ª—è—Ö –¥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—è —è–∫–∏–π –º–∏ —Å–∫–æ–ø—ñ—é–≤–∞–ª–∏ —Ä–∞–Ω—ñ—à–µ")
    next5 = [
        button.inline("–î–∞–ª—ñ", b"next5")
    ]
    await client.send_file(event.chat_id, entered_url_path, caption="–í —Ç–µ–±–µ –ø–æ–≤–∏–Ω–Ω–æ –≤–∏–π—Ç–∏ —è–∫ –Ω–∞ —Ñ–æ—Ç–æ\n–Ü —Ç–µ–ø–µ—Ä –∂–º–∏ –Ω–∞ Enter", buttons=next5)


@client.on(events.CallbackQuery(pattern=b'next5'))
async def opent_folder(event):
    open_folder_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/open_folder.png"
    await event.respond("–¢–µ–ø–µ—Ä –æ–±–∏—Ä–∞–π —É —è–∫–æ–º—É —Ñ–∞–π–ª—ñ —Ç–∏ –≤—ñ–¥–∫—Ä–∏—î—à –ø—Ä–æ—î–∫—Ç.\n–û–±–∏—Ä–∞–π –ø–∞–ø–∫—É —è–∫—É –º–∏ —Å—Ç–≤–æ—Ä–∏–ª–∏ –¥–µ–∫—ñ–ª—å–∫–∞ –µ—Ç–∞–ø—ñ–≤ –Ω–∞–∑–∞–¥")
    next6 = [
        button.inline("–î–∞–ª—ñ", b'next6')
    ]
    await client.send_file(event.chat_id, open_folder_path, caption="–û–±–∏—Ä–∞—î—â —Å–≤–æ—é –ø–∞–ø–∫—É —ñ –∂–º–µ—à - Select as Repository Destinaton", buttons=next6)
    


@client.on(events.CallbackQuery(pattern=b'next6'))
async def confirm(event):
    confirm_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/confirm_opening.png"
    next7 = [
        button.inline("–ü–æ–≥–Ω–∞–ª–∏ –¥–∞–ª—ñ", b'next7')
    ]
    await client.send_file(event.chat_id, confirm_path, caption="–¢–∏ –º–∞–π–∂–µ –≤—ñ–¥–∫—Ä–∏–≤, —Ç–µ–ø–µ—Ä —Ç—É—Ç –æ–±–µ—Ä–∏ –ø–µ—Ä—à—É –∫–Ω–æ–ø–∫—É - Open", buttons=next7)


@client.on(events.CallbackQuery(pattern=b'next7'))
async def render_project(event):
    done_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/opening_done.png"
    next8 = [
        button.inline("–î–∞–ª—ñ", b'next8')
    ]
    await client.send_file(event.chat_id, done_path, caption="–£—Ä–∞ü•≥\n–¢–∏ –≤—ñ–¥–∫—Ä–∏–≤ –ø—Ä–æ—î–∫—Ç\n–ê–ª–µ —Ü—å–æ–≥–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ, —â–æ–± –≤—ñ–Ω –ø—Ä–∞—Ü—é–≤–∞–≤ —Ç—Ä–µ–±–∞ —Å–∫–∞—á–∞—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏.", buttons=next8)


@client.on(events.CallbackQuery(pattern=b'next8'))
async def open_terminal(event):
    open_terminal_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/open_terminal.png"
    next9 = [
        button.inline("–î–∞–ª—ñ", b'next9')
    ]
    await client.send_file(event.chat_id, open_terminal_path,caption="–ì–∞—Ä—è—á—ñ –∫–ª–∞–≤—ñ—à–∏ –¥–ª—è —Ç–µ—Ä–º—ñ–Ω–∞–ª—É->\nctrl + shift + ~\nMacBook -\ncontrol + shif + ~\n–ê–±–æ –∑–≤–µ—Ä—Ö—É –æ–±–µ—Ä—ñ—Ç—å Terminal -> New Terminal", buttons=next9)



@client.on(events.CallbackQuery(pattern=b'next9'))
async def create_venv(event):
    os_choice = [
        [button.inline("MacOS", b'macos')],
        [button.inline("Linux", b'linux')],
        [button.inline("Windows", b'windows')]
    ]
    await event.respond("–û–±–µ—Ä–∏ —Å–≤–æ—é –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω—É —Å–∏—Å—Ç–µ–º—É", buttons = os_choice)

# \n–®–∞–≥ 2 - source .venv/bin/activate(–∂–º–∏ enter)

@client.on(events.CallbackQuery)
async def venv_by_os(event):
    if event.data == b'macos' or event.data == b'linux':
        await event.respond("–©–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ( venv, –ø–æ—Ç—Ä—ñ–±–Ω–æ —â–æ–± –≤ –Ω—å–æ–≥–æ –∫–∞—á–∞—Ç–∏ –≤—Å—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏, –∞ –Ω–µ –Ω–∞–ø—Ä—è–º—É —Ç–æ–±—ñ –Ω–∞ –≥–∞–¥–∂–µ—Ç) —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω—ñ 2 –∫–æ–º–∞–Ω–¥–∏ -\n–®–∞–≥ 1 -\npython3 -m venv .venv (–∂–º–∏ enter)")
        confirm_venv_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/confirm_venv.png"
        await client.send_file(event.chat_id, confirm_venv_path, caption="–ù–∞ —Ü—å–æ–º—É –µ—Ç–∞–ø—ñ —É —Ç–µ–±–µ –ø—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–ø–∏—Ç–∞—î —á–∏ –≤–∏ —Ö–æ—á–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —Å–≤—ñ–π venv —è–∫ —Ä–æ–±–æ—á—ñ–π –ø—Ä–æ—Å—Ç—ñ—Ä - –∂–º–∏ Yes")
        await event.respond("–®–∞–≥ 2 - source .venv/bin/activate(–∂–º–∏ enter)")
        show_venv_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/show_venv.png"
        next10 = [
            button.inline("–ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ", b'next10')
        ]
        await client.send_file(event.chat_id, show_venv_path, caption="–ó–Ω–∞–∫ —Ç–æ–≥–æ —â–æ –≤—Å–µ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–∏–ª–æ—Å—è - –≤ —Ç–µ–±–µ –ø–µ—Ä–µ–¥ —ñ–º º—è–º –ø–∏—à–µ—Ç—å—Å—è (.venv)", buttons=next10)

    elif event.data == b'windows':
        await event.respond("–©–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ( venv ) —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω—ñ 2 –∫–æ–º–∞–Ω–¥–∏ -\n–®–∞–≥ 1 -\npython -m venv venv (–∂–º–∏ enter)")
        confirm_venv_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/confirm_venv.png"
        await client.send_file(event.chat_id, confirm_venv_path, caption="–ù–∞ —Ü—å–æ–º—É –µ—Ç–∞–ø—ñ —É —Ç–µ–ø–µ –ø—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–ø–∏—Ç–∞—î —á–∏ –≤–∏ —Ö–æ—á–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —Å–≤—ñ–π venv —è–∫ —Ä–æ–±–æ—á—ñ–π –ø—Ä–æ—Å—Ç—ñ—Ä - –∂–º–∏ Yes")
        await event.respond("–®–∞–≥ 2 -  source .venv/bin/activate  (–∂–º–∏ enter)")
        next10 = [
            button.inline("–ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ", b'next10')
        ]
        await event.respond("–Ø–∫—â–æ –≤ —Ç–µ–±–µ –ø–æ—Ä—è–¥ –∑ —ñ–º–µ–Ω–µ–º –Ω–∞ –ø–æ—á–∞—Ç–∫—É —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ .venv ( venv, –ø–æ—Ç—Ä—ñ–±–Ω–æ —â–æ–± –≤ –Ω—å–æ–≥–æ –∫–∞—á–∞—Ç–∏ –≤—Å—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏, –∞ –Ω–µ –Ω–∞–ø—Ä—è–º—É —Ç–æ–±—ñ –Ω–∞ –≥–∞–¥–∂–µ—Ç ) —Ç–æ —Ü–µ –æ–∑–Ω–∞—á–∞—î —â–æ –º–∏ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑—Ä–æ–±–∏–ª–∏", buttons = next10)


@client.on(events.CallbackQuery(pattern=b'next10'))
async def installing(event):
    await event.respond("–¢–µ–ø–µ—Ä —Ç—Ä–µ–±–∞ —É —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É\npip install -r requirements.txt\n–©–æ–± —Å–∫–∞—á–∞—Ç–∏ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏")
    done_downloading_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/downloading_done.png"
    next11_ = [
        button.inline("–î–∞–ª—ñ", b'next11_')
    ]
    await client.send_file(event.chat_id, done_downloading_path, caption='–£ –∫—ñ–Ω—Ü—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∏ –ø–æ–±–∞—á–∏—à –Ω–∞—Å—Ç—É–ø–Ω–µ( —è–∫—â–æ –ø–æ–º–∏–∫–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ)', buttons=next11_)


@client.on(events.CallbackQuery(pattern=b'next11_'))
async def create_file(event):
    create_file_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/create_file.jpg"
    next12_ = [
        button.inline("–î–∞–ª—ñ", b'next12_')
    ]
    await client.send_file(event.chat_id, create_file_path, caption="–¢–µ–ø–µ—Ä —Å—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª –∑ –Ω–∞–∑–≤–æ—é .env", buttons=next12_)


@client.on(events.CallbackQuery(pattern=b'next12_'))
async def enter_text(event):
    enter_text_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/enter_text.png"
    next13_ = [
        button.inline("–î–∞–ª—ñ", b'next13_')
    ]
    await client.send_file(event.chat_id, enter_text_path, caption="–í–≤–µ–¥–∏ —Ç—É–¥–∏ –Ω–∞—Å—Ç—É–ø–Ω–µ -\nSECRET_KEY = 'kjdjsdhvuySD*(v7s9dviugdKJ)' - —Ü–µ–π –∫–ª—é—á –º–æ–∂–µ –±—É—Ç–∏ –±—É–¥—å —è–∫–∏–º - —Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –ø–æ–±–∏–π –ø–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—ñ)\nBACKEND_URL = 'http://127.0.0.1:8000' - —Ü–µ –≤–∂–µ –ø–æ–≤–Ω—ñ—Å—Ç—é —Å–ø–∏—à–∏ –≤ –º–µ–Ω–µ –±–æ –≤–æ–Ω–æ –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —ñ–º–µ–Ω–Ω–æ —Ç–∞–∫–∏–º —è–∫ —è –Ω–∞–ø–∏—Å–∞–≤\n–£ –∫—ñ–Ω—Ü—ñ –≤ —Ç–µ–±–µ –ø–æ–≤–∏–Ω–Ω–æ –≤–∏–π—Ç–∏ —è–∫ —É –º–µ–Ω–µ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω—Ü—ñ ", buttons=next13_)



@client.on(events.CallbackQuery(pattern=b'next13_'))
async def boot_terminal(event):
    boot_terminal_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/boot_terminal.jpg"
    next14_ = [
        button.inline("–î–∞–ª—ñ", b'next14_')
    ]
    await client.send_file(event.chat_id, boot_terminal_path, caption="–¢–µ–ø–µ—Ä —Å—Ç–≤–æ—Ä–∏ —Ç–µ—Ä–º—ñ–Ω–∞–ª —è–∫ —è —Ç–æ–±—ñ –ø–æ–∫–∞–∑—É–≤–∞–≤ –≤–∏—â–µ\n–¢–∞ –Ω–∞–∂–º–∏ —Ç–µ —â–æ —è —Ç–æ–±—ñ –æ–±–≤—ñ–≤ —É –∫—Ä—É–∂–µ—á–æ–∫", buttons=next14_)


@client.on(events.CallbackQuery(pattern=b'next14_'))
async def show_terminal_(event):
    show_terminal_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/dual_terminal.png"
    next15_ = [
        button.inline("–î–∞–ª—ñ", b'next15_')
    ]
    await client.send_file(event.chat_id, show_terminal_path, caption="–û—Å—å —Ç–∞–∫ –ø–æ–≤–∏–Ω–Ω–∞ –≤–∏–≥–ª—è–¥–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏–∞ —É —Ç–µ–±–µ", buttons=next15_)


@client.on(events.CallbackQuery(pattern=b'next15_'))
async def enter_commands(event):
    next16_ = [
        button.inline("–î–∞–ª—ñ", b'next16_')
    ]
    await event.respond("–¢–∏ –≤–∂–µ –º–∞–π–∂–µ –∑–∞–≤–µ—Ä—à–∏–≤\n–¢–µ–ø–µ—Ä —É –ª—ñ–≤–æ–º—É —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ –≤–≤–µ–¥–∏ ->\n flask --app app run \n–ê —É –ø—Ä–∞–≤–æ–º—É –≤–≤–µ–¥–∏ 2 –∫–æ–º–∞–Ω–¥–∏ -\n–ö–æ–º–∞–Ω–¥–∞ 1 -  cd backend\n–ö–æ–º–∞–Ω–¥–∞ 2 - fastapi dev main.py", buttons = next16_)
    

@client.on(events.CallbackQuery(pattern=b'next16_'))
async def final(event):
    final_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/final.png"
    await client.send_file(event.chat_id, final_path, caption="–ú–æ–∂–µ—à –Ω–∞–≤–µ—Å—Ç–∏ –∫—Ä—Å–æ—Ä –Ω–∞ —Å–∏–ª–∫—É *http://127.0.0.1:5000* –≤ –ª—ñ–≤–æ–º—É —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ —ñ –Ω–∞–∂–∞—Ç–∏ ctrl/command + –õ–ö–ú")
    sender = await event.get_sender()
    first_name = sender.first_name
    bonus = [
        button.inline("–ë–æ–Ω—É—Å", b'bonus')
    ]
    await event.respond(f"–Ü –≤ —Ç–µ–±–µ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ –≤—ñ–¥–∫—Ä–∏—î—Ç—å—Å—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –º–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É\n–†–∞–¥–∏–π –±—É–≤ –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ, {first_name}\nEnjoy ‚ö°", buttons=bonus)


@client.on(events.CallbackQuery(pattern=b'bonus'))
async def bonus(event):
    bonus_path = "/Users/leonidlisovskiy/Desktop/bot-balance-manager/funny_video.mp4"
    await client.send_file(event.chat_id, bonus_path, caption="–°—É–¥–¥—ñ, –æ—Å—å –≤–∞–º –¥—É–∂–µ —Å–º—ñ—à–Ω–µ –≤—ñ–¥–µ–æ, –º–æ–∂–µ—Ç–µ –º–µ–Ω–µ –Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –Ω–µ —Å–∏–ª—å–Ω–æ –ø—Ä–µ—Å—É–≤–∞—Ç–∏ üèÜ")



async def main():
    await client.start()
    await client.run_until_disconnected()

if __name__ == '__main__':
    client.loop.run_until_complete(main())